@page
@model PetHealthCareSystemRazorPages.Pages.Customer.AppointmentManagement.AppointmentListModel
@using BusinessObject.DTO.Appointment
@using Utility.Enum
@using Repository.Extensions

@{
    ViewData["Title"] = "Appointment List";
}

<style>
    .appointment-list-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding: 20px;
        max-width: 1200px;
        margin: 50px auto;
        background-color: #f4f4f9;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .appointment-list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
    }

        .appointment-list-header h1 {
            margin: 0;
            font-size: 2rem;
            color: #007bff;
        }

        .appointment-list-header a {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s, transform 0.3s;
        }

            .appointment-list-header a:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .appointment-list-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .page-size-selector {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

        .page-size-selector label {
            margin-right: 10px;
            font-size: 1rem;
        }

        .page-size-selector select {
            padding: 5px 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1rem;
            outline: none;
        }

        .page-size-selector button {
            margin-left: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s;
        }

            .page-size-selector button:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .search-by-date {
        display: flex;
        align-items: center;
    }

        .search-by-date label {
            margin-right: 10px;
            font-size: 1rem;
        }

        .search-by-date input[type="date"] {
            padding: 5px 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1rem;
            outline: none;
        }

        .search-by-date button {
            margin-left: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s;
        }

            .search-by-date button:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .appointment-list-table-container {
        overflow-x: auto;
        max-height: 600px; /* Adjust as needed */
    }

    .appointment-list-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
        background-color: white;
        border-radius: 5px;
        overflow: hidden;
        cursor: pointer;
    }

        .appointment-list-table th,
        .appointment-list-table td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
            transition: background-color 0.3s;
        }

        .appointment-list-table th {
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }

            .appointment-list-table th:hover {
                background-color: #0056b3;
            }

        .appointment-list-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .appointment-list-table tr:hover {
            background-color: #e9ecef;
        }

    .appointment-list-actions a {
        margin-right: 10px;
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s, transform 0.3s;
    }

        .appointment-list-actions a:hover {
            color: #0056b3;
            transform: translateY(-2px);
        }

    .appointment-list-pagination {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .appointment-list-pagination a {
            background-color: #007bff;
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            border-radius: 5px;
            margin: 0 5px;
            transition: background-color 0.3s, transform 0.3s;
        }

            .appointment-list-pagination a:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }
</style>

<div class="appointment-list-container">
    <div class="appointment-list-header">
        <h1>Appointment List</h1>
        <a asp-page="/BookAppointment/BookingForm">Create New</a>
    </div>

    <div class="appointment-list-controls">
        <form method="get" class="page-size-selector">
            <label for="pageSize">Items per page:</label>
            <select id="pageSize" name="pageSize" asp-for="PageSize">
                <option value="5" selected="@(Model.PageSize == 5)">5</option>
                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                <option value="20" selected="@(Model.PageSize == 20)">20</option>
                <option value="50" selected="@(Model.PageSize == 50)">50</option>
            </select>
            <button type="submit">Apply</button>
        </form>

        <form method="get" class="search-by-date">
            <label for="searchDate">Search by Date:</label>
            <input type="date" id="searchDate" name="searchDate" asp-for="SearchDate" value="@Model.SearchDate" />
            <button type="submit">Apply</button>
        </form>
    </div>

    <div class="appointment-list-table-container">
        <table class="appointment-list-table">
            <thead>
            <tr>
                <th>No.</th>
                <th onclick="sortTable(0)" data-sort-dir="">Date</th>
                <th onclick="sortTable(1)" data-sort-dir="">Start Time</th>
                <th onclick="sortTable(2)" data-sort-dir="">End Time</th>
                <th onclick="sortTable(3)" data-sort-dir="">Type</th>
                <th onclick="sortTable(4)" data-sort-dir="">Rating</th>
                <th onclick="sortTable(5)" data-sort-dir="">Veterinarian</th>
                <th onclick="sortTable(6)" data-sort-dir="">Status</th>
                <th>Payment method</th>
                <th>Payment status</th>
                <th>Actions</th>
            </tr>
            </thead>
            <tbody>
            @{
                var i = 1;
            }
            @foreach (var item in Model.Appointment.Items)
            {
                <tr onclick="window.location.href = '@Url.Page("./Detail", new { id = item.Id })'">
                    <td>@i @{ i++;}</td>
                    <td>@Html.DisplayFor(modelItem => item.AppointmentDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.TimeTable.StartTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.TimeTable.EndTime)</td>
                    <td>@Html.DisplayFor(modelItem => item.BookingType)</td>
                    <td>@Html.DisplayFor(modelItem => item.Rating)</td>
                    <td>@Html.DisplayFor(modelItem => item.Vet.FullName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Status)</td>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.PaymentMethod)</td>
                    <td>@Html.DisplayFor(modelItem => item.Transaction.Status)</td>
                    <td class="appointment-list-actions">
                        <a asp-page="./Cancel" asp-route-id="@item.Id">Cancel</a>
                            @if (item.Feedback == null && item.Status == "Complete")
                            {
                                <a asp-page="./FeedBack" asp-route-id="@item.Id">Feedback</a>
                            }
                        </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    @if (!Model.Appointment.Items.Any())
    {
        <p>No appointments found.</p>
    }

    <div class="appointment-list-pagination">
        Page @(Model.Appointment?.PageNumber ?? 0) of @(Model.Appointment?.TotalPages ?? 0)
    </div>
    <div class="appointment-list-pagination">
        @if (Model.Appointment?.HasPreviousPage == true)
        {
            <a asp-page="/Customer/AppointmentManagement/AppointmentList"
               asp-route-pageNumber="@(Model.Appointment.PageNumber - 1)"
               asp-route-pageSize="@(Model.PageSize)"
               asp-route-searchDate="@(Model.SearchDate)">Previous</a>
        }
        @if (Model.Appointment?.HasNextPage == true)
        {
            <a asp-page="/Customer/AppointmentManagement/AppointmentList"
               asp-route-pageNumber="@(Model.Appointment.PageNumber + 1)"
               asp-route-pageSize="@(Model.PageSize)"
               asp-route-searchDate="@(Model.SearchDate)">Next</a>
        }
    </div>
</div>

<script>
    function sortTable(n) {
        const table = document.querySelector('.appointment-list-table tbody');
        const rows = Array.from(table.rows);
        const isNumeric = !isNaN(rows[0].cells[n].innerText);
        const dir = rows[0].cells[n].dataset.sortDir === 'asc' ? 'desc' : 'asc';

        rows.sort((a, b) => {
            const aVal = isNumeric ? parseFloat(a.cells[n].innerText) : a.cells[n].innerText.toLowerCase();
            const bVal = isNumeric ? parseFloat(b.cells[n].innerText) : b.cells[n].innerText.toLowerCase();

            if (aVal < bVal) return dir === 'asc' ? -1 : 1;
            if (aVal > bVal) return dir === 'asc' ? 1 : -1;
            return 0;
        });

        rows.forEach(row => table.appendChild(row));

        Array.from(table.rows[0].cells).forEach(cell => cell.dataset.sortDir = '');
        table.rows[0].cells[n].dataset.sortDir = dir;
    }
</script>
