@page
@model PetHealthCareSystemRazorPages.Pages.Vet.TimeTable.AppointmentModel

@{
    ViewData["Title"] = "Appointments";
}
<style>
    .appointment-list-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding: 20px;
        max-width: 1200px;
        margin: 50px auto;
        background-color: #f4f4f9;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .appointment-list-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        border-bottom: 2px solid #007bff;
        padding-bottom: 10px;
    }

        .appointment-list-header h1 {
            margin: 0;
            font-size: 2rem;
            color: #007bff;
        }

        .appointment-list-header a {
            background-color: #007bff;
            color: white;
            padding: 10px 20px;
            text-decoration: none;
            border-radius: 5px;
            transition: background-color 0.3s, transform 0.3s;
        }

            .appointment-list-header a:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .appointment-list-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .page-size-selector {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

        .page-size-selector label {
            margin-right: 10px;
            font-size: 1rem;
        }

        .page-size-selector select {
            padding: 5px 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1rem;
            outline: none;
        }

        .page-size-selector button {
            margin-left: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s;
        }

            .page-size-selector button:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .search-by-date {
        display: flex;
        align-items: center;
    }

        .search-by-date label {
            margin-right: 10px;
            font-size: 1rem;
        }

        .search-by-date input[type="date"] {
            padding: 5px 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            font-size: 1rem;
            outline: none;
        }

        .search-by-date button {
            margin-left: 10px;
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.3s;
        }

            .search-by-date button:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }

    .appointment-list-table-container {
        overflow-x: auto;
        max-height: 600px; /* Adjust as needed */
    }

    .appointment-list-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
        background-color: white;
        border-radius: 5px;
        overflow: hidden;
        cursor: pointer;
    }

        .appointment-list-table th,
        .appointment-list-table td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
            transition: background-color 0.3s;
        }

        .appointment-list-table th {
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }

            .appointment-list-table th:hover {
                background-color: #0056b3;
            }

        .appointment-list-table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        .appointment-list-table tr:hover {
            background-color: #e9ecef;
        }

    .appointment-list-actions a {
        margin-right: 10px;
        color: #007bff;
        text-decoration: none;
        transition: color 0.3s, transform 0.3s;
    }

        .appointment-list-actions a:hover {
            color: #0056b3;
            transform: translateY(-2px);
        }

    .appointment-list-pagination {
        margin-top: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
    }

        .appointment-list-pagination a {
            background-color: #007bff;
            color: white;
            padding: 10px 15px;
            text-decoration: none;
            border-radius: 5px;
            margin: 0 5px;
            transition: background-color 0.3s, transform 0.3s;
        }

            .appointment-list-pagination a:hover {
                background-color: #0056b3;
                transform: translateY(-2px);
            }
</style>

<div class="appointment-list-container">
    <div class="appointment-list-header">
        <h1>Appointments</h1>
    </div>
    <div class="appointment-list-controls">
        <form method="get" class="page-size-selector">
            <label for="pageSize">Items per page:</label>
            <select id="pageSize" name="pageSize" asp-for="PageSize">
                <option value="5" selected="@(Model.PageSize == 5)">5</option>
                <option value="10" selected="@(Model.PageSize == 10)">10</option>
                <option value="20" selected="@(Model.PageSize == 20)">20</option>
                <option value="50" selected="@(Model.PageSize == 50)">50</option>
            </select>
            <button type="submit">Apply</button>
        </form>
    </div>
    <div class="appointment-list-table-container">
        <table class="appointment-list-table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Appointment.Items.FirstOrDefault().AppointmentDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Appointment.Items.FirstOrDefault().TimeTable.StartTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Appointment.Items.FirstOrDefault().TimeTable.EndTime)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Appointment.Items.FirstOrDefault().Status)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Appointment.Items.Count() != 0 )
                {
                    
                    foreach (var item in Model.Appointment.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.AppointmentDate)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeTable.StartTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeTable.EndTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td class="appointment-list-actions">
                                @if (item.Status.Equals("Completed"))
                                {
                                    <a>MakeRecord</a>
                                }else
                                {
                                    <a asp-page="./CreateMedical" asp-route-id="@item.Id">MakeRecord</a>
                                }
                            </td>
                        </tr>
                    }
                   
                   
                }
                else
                {
                    <tr>
                        <td colspan="" class="text-center">No Appointments Found</td>
                    </tr>
                }
            </tbody>
        </table>
        @if (!Model.Appointment.Items.Any())
        {
            <p>No appointments found.</p>
        }
        <div class="appointment-list-pagination">
            Page @(Model.Appointment?.PageNumber ?? 0) of @(Model.Appointment?.TotalPages ?? 0)
        </div>
        <div class="appointment-list-pagination">
            @if (Model.Appointment.PageNumber > 1)
            {
                <a asp-page="/Vet/TimeTable/Appointment"
                   asp-route-currentPage="@(Model.Appointment.PageNumber - 1)"
                   asp-route-pageSize="@(Model.PageSize)">Previous</a>


            }
            @if (Model.Appointment.PageNumber < Model.Appointment.TotalPages)
            {
                  
                        <a asp-page="/Vet/TimeTable/Appointment"
                           asp-route-currentPage="@(Model.Appointment.PageNumber + 1)"
                           asp-route-pageSize="@(Model.PageSize)">Next</a>

            }
        </div>

    </div>
</div>